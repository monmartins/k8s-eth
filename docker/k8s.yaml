apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml --volumes hostPath --out k8s.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: ethereum
      name: ethereum
    spec:
      ports:
        - name: "8009"
          port: 8009
          targetPort: 8009
        - name: "8545"
          port: 8545
          targetPort: 8545
        - name: "8546"
          port: 8546
          targetPort: 8546
        - name: "8547"
          port: 8547
          targetPort: 8547
        - name: "30303"
          port: 30303
          targetPort: 30303
        - name: 30303-udp
          port: 30303
          protocol: UDP
          targetPort: 30303
      selector:
        io.kompose.service: ethereum
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml --volumes hostPath --out k8s.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: nodejs
      name: nodejs
    spec:
      ports:
        - name: "8000"
          port: 8000
          targetPort: 8000
      selector:
        io.kompose.service: nodejs
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml --volumes hostPath --out k8s.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: ethereum
      name: ethereum
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: ethereum
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml --volumes hostPath --out k8s.yaml
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.network/ethereum_private: "true"
            io.kompose.service: ethereum
        spec:
          containers:
            - args:
                - /bin/sh
                - /home/dev/ethereum-config/scripts/init.sh
              env:
                - name: ACCOUNT_PASSWORD
                - name: BACKUP_FOLDER
                  value: /home/dev/ethereum-config/backup
                - name: BOOTNODE_FOLDER
                  value: /home/dev/ethereum-config/bootnode
                - name: DAG_FOLDER
                  value: /root/eth-cache
                - name: ETH_FOLDER
                  value: /home/dev/eth
                - name: GENESIS_FILE
                  value: /home/dev/ethereum-config/genesis.json
                - name: GENESIS_FILE_TEMPLATE
                  value: /home/dev/ethereum-config/genesis-template.json
                - name: NETWORK_ID
                  value: "2745"
                - name: SCRIPT_FOLDER
                  value: /home/dev/ethereum-config/scripts
              image: ethereum-go-1-14-4:alpine-3.8
              name: ethereum-dev
              ports:
                - containerPort: 8009
                - containerPort: 8545
                - containerPort: 8546
                - containerPort: 8547
                - containerPort: 30303
                - containerPort: 30303
                  protocol: UDP
              resources: {}
              stdin: true
              tty: true
              volumeMounts:
                - mountPath: /home/dev/ethereum-config
                  name: ethereum-hostpath0
              workingDir: /home/dev/
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /home/ubuntu/Documents/kubernetes/k8s-eth/eth/config
              name: ethereum-hostpath0
    status: {}
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      name: ethereum_private
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  io.kompose.network/ethereum_private: "true"
      podSelector:
        matchLabels:
          io.kompose.network/ethereum_private: "true"
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml --volumes hostPath --out k8s.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: nodejs
      name: nodejs
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: nodejs
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml --volumes hostPath --out k8s.yaml
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.network/ethereum_private: "true"
            io.kompose.service: nodejs
        spec:
          containers:
            - args:
                - node
                - server.js
              env:
                - name: ACCOUNT_PASSWORD
                - name: CONTRACT_ADRESS
                - name: CONTRACT_EXIST
                - name: SECRET
                - name: WORKING_DIR
                  value: /home/dev
              image: nodejs-14:alpine-310
              name: nodejs
              ports:
                - containerPort: 8000
              resources: {}
              stdin: true
              tty: true
              volumeMounts:
                - mountPath: /home/dev
                  name: nodejs-hostpath0
                - mountPath: /home/dev/ethereum-config
                  name: nodejs-hostpath1
                - mountPath: /home/dev/node_modules
                  name: exclude
              workingDir: /home/dev
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /home/ubuntu/Documents/kubernetes/k8s-eth/app
              name: nodejs-hostpath0
            - hostPath:
                path: /home/ubuntu/Documents/kubernetes/k8s-eth/eth/config
              name: nodejs-hostpath1
            - hostPath:
                path: /home/ubuntu/Documents/kubernetes/k8s-eth/docker
              name: exclude
    status: {}
kind: List
metadata: {}

